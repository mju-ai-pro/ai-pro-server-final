plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id "org.sonarqube" version "6.0.1.5171"
	id 'checkstyle'
	id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

sonar {
	properties {
		property "sonar.projectKey", "mju-ai-pro_ai-pro-server-production"
		property "sonar.organization", "mju-ai-pro"
		property "sonar.host.url", "https://sonarcloud.io"
		property 'sonar.java.checkstyle.reportPaths', 'build/reports/checkstyle/main.xml'
		property 'sonar.coverage.jacoco.xmlReportPaths', 'build/reports/jacoco/test/jacocoTestReport.xml'
	}
}

compileJava.options.encoding = 'UTF-8'

tasks.withType(Checkstyle) {
	reports {
		xml.required = true
		html.required = true
	}
}

checkstyle {
	toolVersion = "10.12.5"
	configFile = file("config/checkstyle/naver-checkstyle-rules.xml")
	configProperties = ["suppressionFile": "checkstyle/naver-checkstyle-suppressions.xml"]
}

checkstyleMain.source = fileTree('src/main/java')

test {
	useJUnitPlatform()
	finalizedBy 'jacocoTestReport'
}

jacoco {
	toolVersion = "0.8.12"
}

jacocoTestReport {
	reports {
		html.required.set(true)
		csv.required.set(true)
		xml.required.set(true)
	}

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					"**/AiProApplication.class"
			])
		}))
	}
}


repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	runtimeOnly 'com.mysql:mysql-connector-j'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
}

tasks.named('test') {
	useJUnitPlatform()
}
